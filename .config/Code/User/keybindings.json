// Place your key bindings in this file to override the defaults
[
    // ===================================================
    // Neovim `jk` escape
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "k"
    },
    // ===================================================
    // Remove neovim bindings that remap ctrl-c (cuz that should copy)
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode == 'insert'"
    },
    // ===================================================
    // Simulate NERDTree
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!suggestWidgetVisible && !inQuickOpen"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    // ===================================================
    // Ctrl+6 to switch tabs
    {
        "key": "ctrl+6",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    // ===================================================
    // window navigation and manaagement
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "\\ w",
        "command": "workbench.action.splitEditor",
        "when": "editorTextFocus && neovim.mode == normal"
    },
    // ===================================================
    // Focus the terminal
    {
        "key": "ctrl+shift+.",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    // ===================================================
    // ctrl n(next) and p(previous) already works, just adding jk as a personal preference
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // ===================================================
    // Testing
    {
        "key": "ctrl+; ;",
        "command": "exunit.runTest",  // test under cursor
        "when": "editorTextFocus && resourceLangId == elixir"
    },
    {
        "key": "ctrl+; .",
        "command": "exunit.runPrevious",
        "when": "resourceLangId == elixir"
    },
    {
        "key": "ctrl+; g",
        "command": "exunit.runTestFile",
        "when": "editorFocus && resourceLangId == elixir"
    },
    {
        "key": "ctrl+; g",
        "command": "exunit.runTestFile",
        "when": "editorFocus && resourceLangId == elixir"
    },
    {
        "key": "ctrl+; a",
        "command": "exunit.runAll",
        "when": "resourceLangId == elixir"
    },
    {
        "key": "ctrl+; u",
        "command": "exunit.runAllInUmbrella",
        "when": "resourceLangId == elixir"
    },
    // Zoomwin
    {
        "key": "\\ z",
        "command": "workbench.action.toggleZenMode",
        "when": "editorTextFocus && neovim.mode == normal"
    },
    // Back and forward
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    // Don't close the workbench when I accidentally hit ctrl+q
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
]