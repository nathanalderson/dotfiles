- name: Prepare docker repo key
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

- name: Prepare docker repo
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release|lower }} stable"
    filename: docker-ce

- name: Install Docker CE package
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  apt:
    name: docker-ce

- name: Install Docker
  when: ansible_facts['os_family'] == "Archlinux"
  become: yes
  pacman:
    name: [docker, docker-compose]

- name: Create docker group
  become: yes
  group:
    name: docker

- name: Add user to docker group
  become: yes
  user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Create /etc/docker
  become: yes
  file:
    dest: "/etc/docker"
    state: directory

- name: Install Docker daemon config
  become: yes
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json

- name: Install python packages (local)
  # This one has problems using a local connection because you end up still
  # in the virtualenv being used to run the playbook.
  when:
    - ansible_connection != 'local'
    - ansible_facts['os_family'] == "Debian"
  pip:
    name: docker-compose
    executable: pip3
    extra_args: --user
    state: present
